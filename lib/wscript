#! /usr/bin/env python
# encoding: utf-8

def options(ctx):
    ctx.load('compiler_c')
    ctx.add_option('--impl', action='store', default='terminal', help='Choose the implementation')

def configure(ctx):
    ctx.load('compiler_c')

    import sys

    if ctx.options.impl == 'gl':
        # For opengl extensions.
        ctx.env.append_value('NOROI_LIB', ['glad'])

        # For our window + opengl context.
        ctx.check_cfg(package='glfw3', args='--cflags --libs', uselib_store='glfw', mandatory=True)
        ctx.env.append_value('NOROI_LIB', ['glfw'])

        # This is needed for glfw!
        if sys.platform == 'linux':
            ctx.check_cc(lib='dl', uselib_store='dl', mandatory=True)
            ctx.env.append_value('NOROI_LIB', ['dl'])

        if sys.platform == 'win32' or sys.platform == 'cygwin' or sys.platform == 'msys':
            ctx.check_cc(lib='gdi32', uselib_store='gdi32', mandatory=True)
            ctx.env.append_value('NOROI_LIB', ['gdi32'])

        # For text rendering
        ctx.check_cfg(package='freetype2', args='--cflags --libs', uselib_store='freetype', mandatory=True);
        ctx.env.append_value('NOROI_LIB', ['freetype']);

        ctx.env.CFLAGS = ['-DNOROI_USE_GLFW']

    elif ctx.options.impl == 'terminal':
        if sys.platform == 'win32' or sys.platform == 'cygwin' or sys.platform == 'msys':
            ctx.env.CFLAGS = ['-DNOROI_TERMINAL_WINDOWS']
        else:
            ctx.check_cfg(package='ncurses', args='--cflags --libs', uselib_store='ncurses', mandatory=True)
            ctx.env.append_value('NOROI_LIB', ['ncurses'])

            ctx.env.CFLAGS = ['-DNOROI_TERMINAL_NCURSES']

def build(ctx):
    ctx.install_files('${PREFIX}/include', ctx.path.ant_glob('include/noroi/**/*.h'))

    ctx.stlib(source=ctx.path.ant_glob('src/**/*.c'),
              target='noroi',
              includes=['include'],
              export_includes=['include'],
              use=ctx.env.NOROI_LIB)
